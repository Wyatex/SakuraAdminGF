// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// SysAuthDao is the data access object for table sys_auth.
type SysAuthDao struct {
	table   string         // table is the underlying table name of the DAO.
	group   string         // group is the database configuration group name of current DAO.
	columns SysAuthColumns // columns contains all the column names of Table for convenient usage.
}

// SysAuthColumns defines and stores column names for table sys_auth.
type SysAuthColumns struct {
	Id        string //
	ParentId  string // 父菜单id
	Type      string // 类型（0目录 1多层目录中间层 2页面 3API 4按钮）
	Title     string // 中文展示名
	RoutePath string // 路由目录(唯一)
	RouteName string // 路由name(唯一)
	ApiPath   string // api路径(唯一)
	BtnName   string // 按钮名称(英文，唯一)
	Icon      string // 菜单icon
	Sort      string // 排序
	Hidden    string // 是否在菜单隐藏（0否 1是）
	Status    string // 状态(1可用 0不可用)
	CreatedAt string // 创建时间
	UpdatedAt string // 更新时间
	DeletedAt string // 删除时间
}

//  sysAuthColumns holds the columns for table sys_auth.
var sysAuthColumns = SysAuthColumns{
	Id:        "id",
	ParentId:  "parent_id",
	Type:      "type",
	Title:     "title",
	RoutePath: "route_path",
	RouteName: "route_name",
	ApiPath:   "api_path",
	BtnName:   "btn_name",
	Icon:      "icon",
	Sort:      "sort",
	Hidden:    "hidden",
	Status:    "status",
	CreatedAt: "created_at",
	UpdatedAt: "updated_at",
	DeletedAt: "deleted_at",
}

// NewSysAuthDao creates and returns a new DAO object for table data access.
func NewSysAuthDao() *SysAuthDao {
	return &SysAuthDao{
		group:   "default",
		table:   "sys_auth",
		columns: sysAuthColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *SysAuthDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *SysAuthDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *SysAuthDao) Columns() SysAuthColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *SysAuthDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *SysAuthDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *SysAuthDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
