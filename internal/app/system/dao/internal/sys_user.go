// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// SysUserDao is the data access object for table sys_user.
type SysUserDao struct {
	table   string         // table is the underlying table name of the DAO.
	group   string         // group is the database configuration group name of current DAO.
	columns SysUserColumns // columns contains all the column names of Table for convenient usage.
}

// SysUserColumns defines and stores column names for table sys_user.
type SysUserColumns struct {
	Id            string // 主键
	Username      string // 用户登录账号
	Password      string // 用户登录密码
	Salt          string // 加密盐
	Nickname      string // 用户昵称
	Phone         string // 中国手机不带国家代码，国际手机号格式为：国家代码-手机号
	Address       string // 联系地址
	Email         string // 用户登录邮箱
	Avatar        string // 用户头像
	Sex           string // 性别(0:保密,1:男,2:女)
	DeptId        string // 部门id
	Remark        string // 备注
	LastLoginIp   string // 最后登录ip
	LastLoginTime string // 最后登录时间
	ThemeSetting  string // 界面设置
	Status        string // 用户状态;0:禁用,1:正常,2:未验证
	CreatedAt     string // 创建时间
	UpdatedAt     string // 更新时间
	DeletedAt     string // 删除时间
}

//  sysUserColumns holds the columns for table sys_user.
var sysUserColumns = SysUserColumns{
	Id:            "id",
	Username:      "username",
	Password:      "password",
	Salt:          "salt",
	Nickname:      "nickname",
	Phone:         "phone",
	Address:       "address",
	Email:         "email",
	Avatar:        "avatar",
	Sex:           "sex",
	DeptId:        "dept_id",
	Remark:        "remark",
	LastLoginIp:   "last_login_ip",
	LastLoginTime: "last_login_time",
	ThemeSetting:  "theme_setting",
	Status:        "status",
	CreatedAt:     "created_at",
	UpdatedAt:     "updated_at",
	DeletedAt:     "deleted_at",
}

// NewSysUserDao creates and returns a new DAO object for table data access.
func NewSysUserDao() *SysUserDao {
	return &SysUserDao{
		group:   "default",
		table:   "sys_user",
		columns: sysUserColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *SysUserDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *SysUserDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *SysUserDao) Columns() SysUserColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *SysUserDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *SysUserDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *SysUserDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
